steps:
  - name: "gcr.io/cloud-builders/docker"
    id: Pull Cache Image JVM
    entrypoint: 'bash'
    args: ['-c', 'docker pull gcr.io/$PROJECT_ID/iron-bank:v2-jvm || exit 0']
  - name: "gcr.io/cloud-builders/docker"
    id: Pull Cache Image NATIVE
    entrypoint: 'bash'
    args: [ '-c', 'docker pull gcr.io/$PROJECT_ID/iron-bank:v2-native || exit 0' ]
  - name: "gcr.io/cloud-builders/docker"
    id: Build Image JVM
    entrypoint: 'bash'
    args: ['-c', 'docker build -f jvm.dockerfile --cache-from gcr.io/$PROJECT_ID/iron-bank:v2-jvm -t gcr.io/$PROJECT_ID/iron-bank:v2-jvm -t gcr.io/$PROJECT_ID/iron-bank:v2-jvm-$COMMIT_SHA .']
  - name: "gcr.io/cloud-builders/docker"
    id: Build Image NATIVE
    entrypoint: 'bash'
    args: [ '-c', 'docker build -f native.dockerfile --cache-from gcr.io/$PROJECT_ID/iron-bank:v2-native -t gcr.io/$PROJECT_ID/iron-bank:v2-native -t gcr.io/$PROJECT_ID/iron-bank:v2-native-$COMMIT_SHA .' ]
  - name: "gcr.io/cloud-builders/docker"
    id: Push Image
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker push gcr.io/$PROJECT_ID/iron-bank:v2-jvm
        docker push gcr.io/$PROJECT_ID/iron-bank:v2-native
        docker push gcr.io/$PROJECT_ID/iron-bank:v2-jvm-$COMMIT_SHA
        docker push gcr.io/$PROJECT_ID/iron-bank:v2-native-$COMMIT_SHA
  - id: 'Generate manifest'
    name: 'gcr.io/cloud-builders/gcloud'
    secretEnv: ['PROJECT_REGION']
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        sed "s/_GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" terraform/terraform.tpl.tfvars | \
        sed "s|_IRON_BANK_DOCKER_IMAGE|gcr.io/$PROJECT_ID/iron-bank:v2-native-$COMMIT_SHA|g" | \
        sed "s/_PROJECT_REGION/$$PROJECT_REGION/g" > terraform/terraform.tfvars
  - id: 'Terraform Init'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform init
  - id: 'Terraform Plan'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform
        terraform plan -var-file="terraform.tfvars"
  - id: 'Terraform Apply'
    name: 'hashicorp/terraform:1.0.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          cd terraform
          terraform apply -var-file="terraform.tfvars" -auto-approve
        else
          echo "***************************** SKIPPING APPLYING *******************************"
          echo "Branch '$BRANCH_NAME' does not represent an official environment."
          echo "*******************************************************************************"
        fi
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/project-region/versions/latest
    env: 'PROJECT_REGION'
images:
- gcr.io/$PROJECT_ID/iron-bank:v2-jvm
- gcr.io/$PROJECT_ID/iron-bank:v2-native
- gcr.io/$PROJECT_ID/iron-bank:v2-jvm-$COMMIT_SHA
- gcr.io/$PROJECT_ID/iron-bank:v2-native-$COMMIT_SHA